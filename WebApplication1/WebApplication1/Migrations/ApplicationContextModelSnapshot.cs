// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Accounts", b =>
                {
                    b.Property<int>("PK_account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_account"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("FK_Role")
                        .HasColumnType("int");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("PK_account");

                    b.HasIndex("FK_Role");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            PK_account = 1,
                            Email = "john.doe@example.com",
                            FK_Role = 1,
                            First_Name = "John",
                            Last_Name = "Doe",
                            Phone = "123456789"
                        },
                        new
                        {
                            PK_account = 2,
                            Email = "jane.smith@example.com",
                            FK_Role = 2,
                            First_Name = "Jane",
                            Last_Name = "Smith",
                            Phone = "987654321"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Categories", b =>
                {
                    b.Property<int>("PK_category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_category"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PK_category");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            PK_category = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            PK_category = 2,
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Products", b =>
                {
                    b.Property<int>("PK_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_Product"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("depth")
                        .HasColumnType("float");

                    b.Property<double>("height")
                        .HasColumnType("float");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.Property<double>("width")
                        .HasColumnType("float");

                    b.HasKey("PK_Product");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            PK_Product = 1,
                            Name = "Laptop",
                            depth = 20.0,
                            height = 2.0,
                            weight = 2.5,
                            width = 30.0
                        },
                        new
                        {
                            PK_Product = 2,
                            Name = "Smartphone",
                            depth = 15.0,
                            height = 0.69999999999999996,
                            weight = 0.20000000000000001,
                            width = 7.0
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Products_Categories", b =>
                {
                    b.Property<int>("FK_Product")
                        .HasColumnType("int");

                    b.Property<int>("FK_Category")
                        .HasColumnType("int");

                    b.HasKey("FK_Product", "FK_Category");

                    b.HasIndex("FK_Category");

                    b.ToTable("Products_Categories");

                    b.HasData(
                        new
                        {
                            FK_Product = 1,
                            FK_Category = 1
                        },
                        new
                        {
                            FK_Product = 2,
                            FK_Category = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Roles", b =>
                {
                    b.Property<int>("PK_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_role"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PK_role");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            PK_role = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            PK_role = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.ShoppingCarts", b =>
                {
                    b.Property<int>("FK_Product")
                        .HasColumnType("int");

                    b.Property<int>("FK_Account")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("FK_Product", "FK_Account");

                    b.HasIndex("FK_Account");

                    b.ToTable("ShoppingCarts");

                    b.HasData(
                        new
                        {
                            FK_Product = 1,
                            FK_Account = 1,
                            amount = 1
                        },
                        new
                        {
                            FK_Product = 2,
                            FK_Account = 2,
                            amount = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Accounts", b =>
                {
                    b.HasOne("WebApplication1.Models.Roles", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("FK_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApplication1.Models.Products_Categories", b =>
                {
                    b.HasOne("WebApplication1.Models.Categories", "Categories")
                        .WithMany("Products_Categories")
                        .HasForeignKey("FK_Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Products", "Products")
                        .WithMany("ProductsCategoriesCollection")
                        .HasForeignKey("FK_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApplication1.Models.ShoppingCarts", b =>
                {
                    b.HasOne("WebApplication1.Models.Accounts", "Accounts")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("FK_Account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Products", "Products")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("FK_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApplication1.Models.Accounts", b =>
                {
                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("WebApplication1.Models.Categories", b =>
                {
                    b.Navigation("Products_Categories");
                });

            modelBuilder.Entity("WebApplication1.Models.Products", b =>
                {
                    b.Navigation("ProductsCategoriesCollection");

                    b.Navigation("ShoppingCarts");
                });

            modelBuilder.Entity("WebApplication1.Models.Roles", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
